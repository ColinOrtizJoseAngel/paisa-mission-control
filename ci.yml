# Nombre del flujo de trabajo que aparecerá en la pestaña "Actions" de GitHub
name: Backend CI Pipeline

# Define cuándo se ejecutará este flujo de trabajo
on:
  # Se ejecuta en cada 'push' a la rama 'main'
  push:
    branches: [ "main" ]
  # Se ejecuta en cada 'pull request' que apunte a la rama 'main'
  pull_request:
    branches: [ "main" ]

# Define los trabajos (jobs) que se ejecutarán
jobs:
  # Nombramos nuestro único trabajo como "build-and-test"
  build-and-test:
    # El tipo de máquina virtual en la que se ejecutará el trabajo
    runs-on: ubuntu-latest
    
    # Define los pasos que se ejecutarán secuencialmente
    steps:
      # 1. Clona tu repositorio en la máquina virtual
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Configura el entorno de Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11' # Asegúrate de que coincida con la versión que usas

      # 3. Instala las dependencias del backend
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt # Es importante tener este archivo

      # 4. Ejecuta las pruebas unitarias con Pytest
      - name: Run tests with pytest
        run: |
          cd backend
          python -m pytest
```

---
### Paso 3: Crear el Archivo `requirements.txt`

El flujo de trabajo anterior depende de un archivo llamado `requirements.txt` para saber qué librerías de Python instalar. Vamos a crearlo.

1.  Abre tu terminal en la carpeta `backend`.
2.  Asegúrate de que tu entorno virtual `(venv)` esté **activo**.
3.  Ejecuta el siguiente comando:
    ```bash
    pip freeze > requirements.txt
    
